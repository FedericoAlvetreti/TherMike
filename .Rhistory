a <- c(1,2,0,4)
order(a)
order(a,decreasing=T)
source('utils_v2.R')
recordings <- get_audio_objects("processed-recs")
recordings <- get_audio_objects("C:\Users\Leonardo\Desktop\UNIVERSITA\MS\I anno\II semestre\SL\FINAL_PROJECT\Nuova cartella\processed-recs")
recordings <- get_audio_objects("C:/Users/Leonardo/Desktop/UNIVERSITA/MS/I anno/II semestre/SL/FINAL_PROJECT/Nuova cartella/processed-recs")
mel_features_list <- mel_filter_features(recordings, n = 1600)
tries <- rep(NA, 50)
grid <- seq(0,10,length.out=50)
for (i in 1:50) {
LOOCV <- loo_cv(mel_features_list, h=grid[i])
tries[i] <- LOOCV$L2
}
View(recordings)
View(mel_features_list)
recordings <- get_audio_objects("C:/Users/Leonardo/Desktop/UNIVERSITA/MS/I anno/II semestre/SL/FINAL_PROJECT/Nuova cartella/processed-recs")
View(recordings)
recordings <- get_audio_objects("C:/Users/Leonardo/Desktop/UNIVERSITA/MS/I anno/II semestre/SL/FINAL_PROJECT/Nuova cartella/all-recs")
View(recordings)
source('utils_v2.R')
source('utils_v2.R')
recordings <- get_audio_objects("total-recs")
View(recordings)
mel_features_list <- mel_filter_features(recordings, n = 1600)
tries <- rep(NA, 50)
grid <- seq(0,10,length.out=50)
for (i in 1:50) {
LOOCV <- loo_cv(mel_features_list, h=grid[i])
tries[i] <- LOOCV$L2
}
plot(grid,tries,xlab='Bandwidth',ylab='RMSE',main='LOOCV for bandwidth')
h_hat <- grid[which.min(tries)]
abline(v = h_hat,lty=2,col='red')
min(tries)
plot(grid[5:],tries[5:],xlab='Bandwidth',ylab='RMSE',main='LOOCV for bandwidth')
plot(grid[5:50],tries[5:50],xlab='Bandwidth',ylab='RMSE',main='LOOCV for bandwidth')
plot(grid[7:50],tries[5:50],xlab='Bandwidth',ylab='RMSE',main='LOOCV for bandwidth')
plot(grid[7:50],tries[7:50],xlab='Bandwidth',ylab='RMSE',main='LOOCV for bandwidth')
h_hat <- grid[which.min(tries)]
abline(v = h_hat,lty=2,col='red')
kNN_grid <- seq(2,15,length.out=14)
kNN_tries <- rep(NA,14)
for (i in 1:14) {
LOOCV <- kNN_loo_cv(mel_features_list, K=kNN_grid[i])
kNN_tries[i] <- LOOCV$L2
}
kNN_grid <- seq(2,15,length.out=14)
plot(kNN_grid,kNN_tries,xlab='K',ylab='RMSE',main='LOOCV for K in kNN')
k_hat <- kNN_grid[which.min(kNN_tries)]
abline(v = k_hat,lty=2,col='red')
min(kNN_tries)
best_KR <- min(tries)
c(train,test) := train_test_split(mel_features_list, test_ratio=0.2)
KR_preds <- KR_predict_set(train,test,h=grid[which.min(tries)])
RMSE(KR_preds)
Accuracy(KR_preds, degrees=5)
Accuracy(KR_preds, degrees=5)
cv_ranges_report <- cv_ranges_scores(mel_features_list,
metric_fun = Accuracy)
View(cv_ranges_report)
cv_ranges_report <- cv_ranges_scores(mel_features_list,
metric_fun = Accuracy,
h = h_hat)
View(cv_ranges_report)
plot(1:1600, rep(0,1600),col = "white", ylim  = c(-20,-5), main = "Exctracted Features hot water", xlab = "x", ylab = expression(phi(x)))
for (i in 1:length(mel_features_list)){
audio <- mel_features_list[[i]]
if(audio$Label > 90 && audio$Label < 100){
points(1:1600, audio$Mel,"l",col = rgb( 1, runif(1), 0, 1),lwd = 3)
}
}
plot(1:1600, rep(0,1600),col = "white", ylim  = c(-20,-5), main = "Exctracted Features hot water", xlab = "x", ylab = expression(phi(x)))
for (i in 1:length(mel_features_list)){
audio <- mel_features_list[[i]]
if(audio$Label > 90 && audio$Label < 100){
points(1:1600, audio$Mel,"l",col = rgb( 1, runif(1), 0, 1),lwd = 3)
}
}
plot(1:1600, rep(0,1600),col = "white", ylim  = c(-50,-5), main = "Exctracted Features hot water", xlab = "x", ylab = expression(phi(x)))
for (i in 1:length(mel_features_list)){
audio <- mel_features_list[[i]]
if(audio$Label > 90 && audio$Label < 100){
points(1:1600, audio$Mel,"l",col = rgb( 1, runif(1), 0, 1),lwd = 3)
}
}
plot(1:1600, rep(0,1600),col = "white", ylim  = c(-30,-5), main = "Exctracted Features hot water", xlab = "x", ylab = expression(phi(x)))
for (i in 1:length(mel_features_list)){
audio <- mel_features_list[[i]]
if(audio$Label > 90 && audio$Label < 100){
points(1:1600, audio$Mel,"l",col = rgb( 1, runif(1), 0, 1),lwd = 3)
}
}
plot(1:1600, rep(0,1600),col = "white", ylim  = c(-30,-5), main = "Exctracted Features cold water", xlab = "x", ylab = expression(phi(x)))
for (audio in mel_features_list){
if(audio$Label > 0 && audio$Label <10){
points(1:1600, audio$Mel,"l",col = rgb( 0, runif(1), 1, 0.2),lwd = 3)
}
}
